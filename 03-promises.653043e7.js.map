{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA3CAQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MACAZ,OAASa,aAAcb,GACvBc,MAAOC,MAAMD,GACbE,QAASD,MAAMC,IACXL,EAAIM,eAIV,SAAiBD,EAAQE,EAAOJ,GAC9B,IAAK,IAAIK,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAGlCrB,EAFmBqB,EAAI,EACLD,EAAQJ,EAAOK,GAE9BC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAqBxB,QAAiBC,MAAU,IAGnDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QACd,sBAAoB1B,QAAeC,MAAU,G,EAfrD0B,CAAQC,OAAOX,GAASW,OAAO3B,GAAQ2B,OAAOb,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  const {\n  delay: { CSSMathValue: delay },\n  step: {value:step },\n  amount: {value:amount },\n  } = evt.currentTarget;\n  onCount(Number(amount), Number(delay), Number(step));\n}\n\nfunction onCount(amount, delay, step) {\n  for (let i = 0; i < amount; i += 1) {\n    const promiseNum = i + 1;\n    const delayStep = delay + step * i;\n    createPromise(promiseNum, delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","CSSMathValue","step","value","amount","currentTarget","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$onCount","Number"],"version":3,"file":"03-promises.653043e7.js.map"}